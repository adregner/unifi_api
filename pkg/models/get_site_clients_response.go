// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetSiteClientsResponse get site clients response
// swagger:model getSiteClientsResponse
type GetSiteClientsResponse struct {

	// data
	Data []*GetSiteClientsResponseDataItems0 `json:"data"`
}

// Validate validates this get site clients response
func (m *GetSiteClientsResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetSiteClientsResponse) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	for i := 0; i < len(m.Data); i++ {
		if swag.IsZero(m.Data[i]) { // not required
			continue
		}

		if m.Data[i] != nil {
			if err := m.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetSiteClientsResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetSiteClientsResponse) UnmarshalBinary(b []byte) error {
	var res GetSiteClientsResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetSiteClientsResponseDataItems0 get site clients response data items0
// swagger:model GetSiteClientsResponseDataItems0
type GetSiteClientsResponseDataItems0 struct {

	// id
	ID string `json:"_id,omitempty"`

	// is guest by uap
	IsGuestByUap int64 `json:"_is_guest_by_uap,omitempty"`

	// last seen by uap
	LastSeenByUap int64 `json:"_last_seen_by_uap,omitempty"`

	// uptime by uap
	UptimeByUap int64 `json:"_uptime_by_uap,omitempty"`

	// anomalies
	Anomalies int64 `json:"anomalies,omitempty"`

	// ap mac
	ApMac string `json:"ap_mac,omitempty"`

	// assoc time
	AssocTime int64 `json:"assoc_time,omitempty"`

	// authorized
	Authorized bool `json:"authorized,omitempty"`

	// bssid
	Bssid string `json:"bssid,omitempty"`

	// bytes
	Bytes int64 `json:"bytes,omitempty"`

	// ccq
	Ccq int64 `json:"ccq,omitempty"`

	// channel
	Channel int64 `json:"channel,omitempty"`

	// dhcpend time
	DhcpendTime int64 `json:"dhcpend_time,omitempty"`

	// essid
	Essid string `json:"essid,omitempty"`

	// first seen
	FirstSeen int64 `json:"first_seen,omitempty"`

	// hostname
	Hostname string `json:"hostname,omitempty"`

	// idletime
	Idletime int64 `json:"idletime,omitempty"`

	// ip
	IP string `json:"ip,omitempty"`

	// is 11r
	Is11r bool `json:"is_11r,omitempty"`

	// is guest
	IsGuest bool `json:"is_guest,omitempty"`

	// is wired
	IsWired bool `json:"is_wired,omitempty"`

	// last seen
	LastSeen int64 `json:"last_seen,omitempty"`

	// latest assoc time
	LatestAssocTime int64 `json:"latest_assoc_time,omitempty"`

	// mac
	Mac string `json:"mac,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// noise
	Noise int64 `json:"noise,omitempty"`

	// noted
	Noted bool `json:"noted,omitempty"`

	// oui
	Oui string `json:"oui,omitempty"`

	// powersave enabled
	PowersaveEnabled bool `json:"powersave_enabled,omitempty"`

	// qos policy applied
	QosPolicyApplied string `json:"qos_policy_applied,omitempty"`

	// radio
	Radio string `json:"radio,omitempty"`

	// radio name
	RadioName string `json:"radio_name,omitempty"`

	// radio proto
	RadioProto int64 `json:"radio_proto,omitempty"`

	// rssi
	Rssi int64 `json:"rssi,omitempty"`

	// rx bytes
	RxBytes int64 `json:"rx_bytes,omitempty"`

	// rx packets
	RxPackets int64 `json:"rx_packets,omitempty"`

	// rx rate
	RxRate int64 `json:"rx_rate,omitempty"`

	// satisfaction
	Satisfaction int64 `json:"satisfaction,omitempty"`

	// signal
	Signal int64 `json:"signal,omitempty"`

	// site id
	SiteID string `json:"site_id,omitempty"`

	// tx bytes
	TxBytes int64 `json:"tx_bytes,omitempty"`

	// tx packets
	TxPackets int64 `json:"tx_packets,omitempty"`

	// tx power
	TxPower int64 `json:"tx_power,omitempty"`

	// tx rate
	TxRate int64 `json:"tx_rate,omitempty"`

	// uptime
	Uptime int64 `json:"uptime,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`

	// usergroup id
	UsergroupID string `json:"usergroup_id,omitempty"`

	// vlan
	Vlan int64 `json:"vlan,omitempty"`
}

// Validate validates this get site clients response data items0
func (m *GetSiteClientsResponseDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetSiteClientsResponseDataItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetSiteClientsResponseDataItems0) UnmarshalBinary(b []byte) error {
	var res GetSiteClientsResponseDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
