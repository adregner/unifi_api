// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SiteEvent site event
// swagger:model siteEvent
type SiteEvent struct {

	// id
	ID string `json:"_id,omitempty"`

	// ap
	Ap string `json:"ap,omitempty"`

	// channel from
	ChannelFrom string `json:"channel_from,omitempty"`

	// channel to
	ChannelTo string `json:"channel_to,omitempty"`

	// datetime
	// Format: date-time
	Datetime strfmt.DateTime `json:"datetime,omitempty"`

	// key
	Key string `json:"key,omitempty"`

	// msg
	Msg string `json:"msg,omitempty"`

	// radio from
	RadioFrom string `json:"radio_from,omitempty"`

	// radio to
	RadioTo string `json:"radio_to,omitempty"`

	// site id
	SiteID string `json:"site_id,omitempty"`

	// subsystem
	Subsystem string `json:"subsystem,omitempty"`

	// time
	Time int64 `json:"time,omitempty"`

	// user
	User string `json:"user,omitempty"`
}

// Validate validates this site event
func (m *SiteEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatetime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SiteEvent) validateDatetime(formats strfmt.Registry) error {

	if swag.IsZero(m.Datetime) { // not required
		return nil
	}

	if err := validate.FormatOf("datetime", "body", "date-time", m.Datetime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SiteEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SiteEvent) UnmarshalBinary(b []byte) error {
	var res SiteEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
