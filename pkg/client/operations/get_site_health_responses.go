// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bah2830/unifi_api/pkg/models"
)

// GetSiteHealthReader is a Reader for the GetSiteHealth structure.
type GetSiteHealthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSiteHealthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSiteHealthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetSiteHealthDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSiteHealthOK creates a GetSiteHealthOK with default headers values
func NewGetSiteHealthOK() *GetSiteHealthOK {
	return &GetSiteHealthOK{}
}

/*GetSiteHealthOK handles this case with default header values.

the site health response
*/
type GetSiteHealthOK struct {
	Payload *models.GetSiteHealthResponse
}

func (o *GetSiteHealthOK) Error() string {
	return fmt.Sprintf("[GET /s/{site_name}/stat/health][%d] getSiteHealthOK  %+v", 200, o.Payload)
}

func (o *GetSiteHealthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSiteHealthResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSiteHealthDefault creates a GetSiteHealthDefault with default headers values
func NewGetSiteHealthDefault(code int) *GetSiteHealthDefault {
	return &GetSiteHealthDefault{
		_statusCode: code,
	}
}

/*GetSiteHealthDefault handles this case with default header values.

Error response
*/
type GetSiteHealthDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get site health default response
func (o *GetSiteHealthDefault) Code() int {
	return o._statusCode
}

func (o *GetSiteHealthDefault) Error() string {
	return fmt.Sprintf("[GET /s/{site_name}/stat/health][%d] getSiteHealth default  %+v", o._statusCode, o.Payload)
}

func (o *GetSiteHealthDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
