// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bah2830/unifi_api/pkg/models"
)

// GetSystemInfoReader is a Reader for the GetSystemInfo structure.
type GetSystemInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSystemInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSystemInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetSystemInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSystemInfoOK creates a GetSystemInfoOK with default headers values
func NewGetSystemInfoOK() *GetSystemInfoOK {
	return &GetSystemInfoOK{}
}

/*GetSystemInfoOK handles this case with default header values.

Valid system info response
*/
type GetSystemInfoOK struct {
	Payload *models.GetSystemInfoResponse
}

func (o *GetSystemInfoOK) Error() string {
	return fmt.Sprintf("[GET /s/{site_name}/stat/sysinfo][%d] getSystemInfoOK  %+v", 200, o.Payload)
}

func (o *GetSystemInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSystemInfoResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemInfoDefault creates a GetSystemInfoDefault with default headers values
func NewGetSystemInfoDefault(code int) *GetSystemInfoDefault {
	return &GetSystemInfoDefault{
		_statusCode: code,
	}
}

/*GetSystemInfoDefault handles this case with default header values.

Error response
*/
type GetSystemInfoDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get system info default response
func (o *GetSystemInfoDefault) Code() int {
	return o._statusCode
}

func (o *GetSystemInfoDefault) Error() string {
	return fmt.Sprintf("[GET /s/{site_name}/stat/sysinfo][%d] getSystemInfo default  %+v", o._statusCode, o.Payload)
}

func (o *GetSystemInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
